{"version":3,"file":"react-phaser-fiber.esm.js","sources":["../src/components/Scene/SceneContext.tsx","../src/hooks/useScene.ts","../src/components/Game/GameContext.ts","../src/hooks/useGame.ts","../src/hooks/useGameEvent.ts","../src/hooks/useGameLoop.ts","../src/hooks/useInputEvent.ts","../src/hooks/useKeyboardEvent.ts","../src/hooks/useGamePadEvent.ts","../src/utils/findGameObjectsByName.ts","../src/hooks/useArcadeCollider.ts","../src/components/Spawner/SpawnerContext.ts","../src/hooks/useSpawner.ts","../src/reconciler/applyProps/sanitizeProps.ts","../src/reconciler/applyProps/applyProps.ts","../src/reconciler/elements/GameObject.ts","../src/reconciler/element.ts","../src/components/Group.tsx","../src/components/GameObject.tsx","../src/hooks/useGameObject.ts","../src/components/ArcadeCollider.tsx","../src/components/ArcadeImage.tsx","../src/components/Sprite.tsx","../src/components/ArcadeSprite.tsx","../src/reconciler/hostconfig.ts","../src/reconciler/index.ts","../src/components/Game/Game.tsx","../src/components/Image.tsx","../src/components/Scene/Scene.tsx","../src/components/Spawner/Spawner.tsx","../src/components/Spawner/withSpawner.tsx","../src/components/Text.tsx"],"sourcesContent":["import * as React from 'react'\n\nconst SceneContext = React.createContext<Phaser.Scene | null>(null)\n\nexport default SceneContext\n","import { useContext } from 'react'\nimport SceneContext from '../components/Scene/SceneContext'\n\nexport function useScene() {\n  return useContext(SceneContext)\n}\n","import * as React from 'react'\n\nconst GameContext = React.createContext<Phaser.Game | null>(null)\n\nexport default GameContext\n","import { useContext } from 'react'\nimport GameContext from '../components/Game/GameContext'\n\nexport function useGame() {\n  return useContext(GameContext)\n}\n","import { useGame } from './useGame'\nimport { useEffect } from 'react'\n\nexport function useGameEvent(\n  event: string,\n  onEvent: (...eventArgs: any) => any\n) {\n  const game = useGame()\n\n  useEffect(() => {\n    game.events.on(event, onEvent)\n\n    return () => {\n      game.events.off(event, onEvent)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onEvent])\n}\n","import { useGame } from './useGame'\nimport { useEffect } from 'react'\n\n/**\n * Runs the callback once every \"step\" event\n *\n * note: this is shorthand for useGameEvent(\"step\", callback)\n */\nexport function useGameLoop(\n  onLoop: ({ delta, time }: { delta: number; time: number }) => any\n) {\n  const game = useGame()\n\n  useEffect(() => {\n    const callback = (time: number, delta: number) => {\n      onLoop({ delta, time })\n    }\n    game.events.on('step', callback)\n\n    return () => {\n      game.events.off('step', callback)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onLoop])\n}\n","import { useScene } from './useScene'\nimport { useEffect } from 'react'\nimport invariant from 'fbjs/lib/invariant'\n\nexport function useInputEvent(event: string, callback: (event: any) => any) {\n  const scene = useScene()\n\n  useEffect(() => {\n    invariant(\n      !!scene,\n      '`useInputEvent` could not find the scene. Make sure it is used in a component that is a child of <Scene />'\n    )\n\n    scene.input.on(event, callback)\n\n    return () => {\n      scene.input.off(event, callback)\n    }\n  }, [scene, event, callback])\n}\n","import { useScene } from './useScene'\nimport { useEffect } from 'react'\nimport invariant from 'fbjs/lib/invariant'\n\nexport function useKeyboardEvent(event: string, callback: (event: any) => any) {\n  const scene = useScene()\n\n  useEffect(() => {\n    invariant(\n      !!scene,\n      '`useKeyboardEvent` could not find the scene. Make sure it is used in a component that is a child of <Scene />'\n    )\n\n    scene.input.keyboard.on(event, callback)\n    return () => {\n      scene.input.keyboard.off(event, callback)\n    }\n  }, [scene, event, callback])\n}\n","import { useScene } from './useScene'\nimport { useEffect } from 'react'\nimport invariant from 'fbjs/lib/invariant'\n\nexport function useGamepadEvent(event: string, callback: (event: any) => any) {\n  const scene = useScene()\n\n  useEffect(() => {\n    invariant(\n      !!scene,\n      '`useGamepadEvent` could not find the scene. Make sure it is used in a component that is a child of <Scene />'\n    )\n\n    scene.input.gamepad.on(event, callback)\n\n    return () => {\n      scene.input.gamepad.off(event, callback)\n    }\n  }, [scene, event, callback])\n}\n","import { Scene } from 'phaser'\n\nexport function findGameObjectsByName(scene: Scene, name: string) {\n  return scene.children.list.filter(child => child.name === name)\n}\n","import { useLayoutEffect, useRef } from 'react'\nimport { useScene } from './useScene'\nimport { Scene } from 'phaser'\nimport { findGameObjectsByName } from '../utils'\n\nexport type ColliderObjectType = Phaser.GameObjects.GameObject | string\n\n/**\n * Creates a collider between objects or arrays of objects. If provided values are strings, it will\n * search for all objects by that name in the scene.\n */\nexport function useArcadeCollider<\n  T1 extends ColliderObjectType,\n  T2 extends ColliderObjectType\n>(\n  obj1: T1 | T1[],\n  obj2: T2 | T2[],\n  args: {\n    overlapOnly?: boolean\n    onCollide: (\n      obj1: T1 extends string ? any : T1,\n      obj2: T2 extends string ? any : T2\n    ) => any\n    onProcess?: (\n      obj1: T1 extends string ? any : T1,\n      obj2: T2 extends string ? any : T2\n    ) => boolean\n  }\n) {\n  const { onCollide, onProcess, overlapOnly } = args\n  const scene = useScene()\n  const collider = useRef<Phaser.Physics.Arcade.Collider>(null)\n\n  useLayoutEffect(() => {\n    collider.current = scene.physics.add.collider(\n      createObjectsArray(scene, obj1),\n      createObjectsArray(scene, obj2),\n      onCollide,\n      onProcess\n    )\n\n    collider.current.overlapOnly = overlapOnly\n\n    return () => {\n      collider.current.destroy()\n    }\n  }, [])\n\n  // it is much more performant to update the collider via mutations\n  // rather than destroy() and recreate in the above useLayoutEffect\n  useLayoutEffect(() => {\n    if (collider.current) {\n      collider.current.object1 = createObjectsArray(scene, obj1)\n      collider.current.object2 = createObjectsArray(scene, obj2)\n    }\n  }, [obj1, obj2])\n\n  useLayoutEffect(() => {\n    if (collider.current) {\n      collider.current.collideCallback = onCollide\n      collider.current.processCallback = onProcess\n      collider.current.overlapOnly = overlapOnly\n    }\n  }, [onCollide, onProcess, overlapOnly])\n}\n\nfunction createObjectsArray(\n  scene: Scene,\n  objects: ColliderObjectType | ColliderObjectType[]\n) {\n  return toArray(objects).reduce(\n    (total: Phaser.GameObjects.GameObject[], object) => {\n      if (typeof object === 'string') {\n        return [...total, ...findGameObjectsByName(scene, object)]\n      }\n\n      return [...total, object]\n    },\n    []\n  ) as Phaser.GameObjects.GameObject[]\n}\n\nfunction toArray<T>(obj: T): T[] {\n  return Array.isArray(obj) ? obj : [obj]\n}\n","import * as React from 'react'\n\nexport interface SpawnerContextValue {\n  /**\n   * Spawn a component into the parent <Spawner> component\n   *\n   * `component` will be passed an `onDestroy` prop from the spawner. This should\n   * be called when the component needs to be unmounted.\n   */\n  spawn: <P>(component: React.ComponentType<P>, props: P & SpawnProps) => string\n}\n\nexport interface SpawnProps {\n  onDestroy?: () => any\n}\n\nconst SpawnerContext = React.createContext<SpawnerContextValue>(null)\n\nexport default SpawnerContext\n","import { useContext } from 'react'\nimport SpawnerContext from '../components/Spawner/SpawnerContext'\n\nexport function useSpawner() {\n  return useContext(SpawnerContext)\n}\n","/**\n * Reserved props\n */\nexport const PROPS_RESERVED = {\n  children: true,\n  parent: true,\n  object: true,\n  physics: true,\n  physicsType: true,\n  instance: true,\n  scene: true,\n}\n\n/**\n * Removes any props that have reserved names\n * @param props\n */\nexport default function sanitizeProps(\n  props: Record<string, any>\n): Record<string, any> {\n  return Object.keys(props).reduce((filteredProps, key) => {\n    if (Object.keys(PROPS_RESERVED).indexOf(key) === -1) {\n      return {\n        ...filteredProps,\n        [key]: props[key],\n      }\n    }\n\n    return {\n      ...filteredProps,\n    }\n  }, {})\n}\n","import sanitizeProps from './sanitizeProps'\n\nexport default function applyProps(\n  instance: any,\n  oldProps: Record<string, any>,\n  newProps: Record<string, any>\n) {\n  Object.keys(sanitizeProps(newProps)).forEach(key => {\n    if (\n      typeof newProps[key] !== 'undefined' &&\n      oldProps[key] !== newProps[key]\n    ) {\n      const newValue: any = newProps[key]\n      const oldValue: any = oldProps[key]\n\n      switch (key) {\n        case 'data':\n          Object.keys(newProps.data).forEach(dataKey => {\n            instance.setData(dataKey, newProps.data[dataKey])\n          })\n          break\n\n        /** Point values **/\n        case 'acceleration':\n        case 'bounce':\n        case 'drag':\n        case 'friction':\n        case 'gravity':\n        case 'velocity':\n        case 'maxVelocity': {\n          const oldPoint = convertToPoint(oldProps[key])\n          const newPoint = convertToPoint(newProps[key])\n          if (!pointsAreEqual(oldPoint, newPoint)) {\n            setProp(instance, key, newPoint.x, newPoint.y)\n          }\n          break\n        }\n\n        /** Animation **/\n        case 'accumulator':\n        case 'delay':\n        case 'duration':\n        case 'forward':\n        case 'frameRate':\n        case 'isPlaying':\n        case 'msPerFrame':\n        case 'skipMissedFrames':\n        case 'progress':\n        case 'stopOnFrame':\n        case 'stopAfterDelay':\n        case 'repeat':\n        case 'repeatDelay':\n        case 'timeScale':\n        case 'yoyo':\n          setProp(instance.anims, key, newValue)\n          break\n        /** Physics **/\n        case 'debug':\n          if (\n            oldProps.debugShowBody !== newProps.debugShowBody ||\n            oldProps.debugShowVelocity !== newProps.debugShowVelocity ||\n            oldProps.debugBodyColor !== newProps.debugBodyColor\n          ) {\n            instance.setDebug(\n              newProps.debugShowBody,\n              newProps.debugShowVelocity,\n              newProps.debugBodyColor\n            )\n          }\n          break\n        case 'disableBody':\n        case 'hideBody':\n          if (\n            oldProps.disableBody !== newProps.disableBody ||\n            oldProps.hideBody !== newProps.hideBody\n          ) {\n            instance.disableBody(newProps.disableBody, newProps.hideBody)\n          }\n          break\n        case 'circle':\n          if (newProps.circle) {\n            if (\n              !oldProps.circle ||\n              oldProps.circle.radius !== newProps.circle.radius ||\n              oldProps.circle.offsetX !== newProps.circle.offsetX ||\n              oldProps.circle.offsetY !== newProps.circle.offsetY\n            ) {\n              instance.setCircle(\n                newProps.circle.radius,\n                newProps.circle.offsetX,\n                newProps.circle.offsetY\n              )\n            }\n          }\n          break\n        case 'offset':\n          if (\n            !oldProps.offset ||\n            oldProps.offset.x !== newProps.offset.x ||\n            oldProps.offset.y !== newProps.offset.y\n          ) {\n            instance.setOffset(newProps.offset.x, newProps.offset.y)\n          }\n          break\n        case 'onWorldBounds':\n          setProp(instance.body, key, newValue)\n          break\n        case 'size':\n          if (newProps.size) {\n            if (\n              !oldProps.size ||\n              oldProps.size.width !== newProps.size.width ||\n              oldProps.size.height !== newProps.size.height ||\n              oldProps.size.center !== newProps.size.center\n            ) {\n              instance.setSize(\n                newProps.size.width,\n                newProps.size.height,\n                newProps.size.center\n              )\n            }\n          }\n          break\n        case 'allowGravity':\n        case 'allowDrag':\n        case 'allowAcceleration':\n          setProp(instance.body, key, newValue)\n          break\n        case 'scale':\n          if (typeof newValue === 'number') {\n            instance.setScale(newValue)\n          } else {\n            instance.setScale(\n              newValue.x,\n              newValue.y,\n              newValue.point ? [newValue.point.x, newValue.point.y] : undefined\n            )\n          }\n\n          // if static, refresh body. there are probably other keys that need this\n          if (instance.body?.physicsType === 1) {\n            instance.body.updateFromGameObject()\n          }\n          break\n        default:\n          setProp(instance, key, newProps[key])\n      }\n    }\n  })\n}\n\nfunction setProp(instance: any, key: string, ...value: any) {\n  // get method name for property. ex: 'setStyle' for 'style'\n  const methodName = `set${key.slice(0, 1).toUpperCase() + key.slice(1)}`\n\n  if (instance[methodName]) {\n    instance[methodName](...value)\n  } else {\n    if (typeof instance[key] === 'function') {\n      instance[key](...value)\n    } else {\n      // ...value will always be an array, so we'll get the [0] value\n      instance[key] = value[0]\n    }\n  }\n}\n\nfunction convertToPoint(num: number | { x: number; y: number }) {\n  if (typeof num === 'number') {\n    return { x: num, y: num }\n  }\n\n  if (!num) {\n    return { x: 0, y: 0 }\n  }\n\n  return num\n}\n\nfunction pointsAreEqual(\n  p1: { x: number; y: number },\n  p2: { x: number; y: number }\n) {\n  return p1.x === p2.x && p1.y === p2.y\n}\n","import { applyProps } from '../applyProps'\nimport { CreatePhaserComponentConfig } from '../element'\n\nexport interface GameObjectProps<T extends Phaser.GameObjects.GameObject> {\n  instance: T\n  ref?: React.Ref<T>\n  name?: string\n  active?: boolean\n  tabIndex?: boolean\n  data?: any\n  renderFlags?: integer\n  cameraFilter?: number\n  ignoreDestroy?: boolean\n  input?: Phaser.Types.Input.InteractiveObject\n  children?: React.ReactNode\n\n  /**\n   * Creates the body in the phaser for the specified physics world\n   *\n   * note: only 'arcade' is supported for now\n   */\n  physics?: 'arcade'\n  physicsType?: 'static' | 'dynamic'\n}\n\nexport type AlphaProps = Partial<\n  Pick<\n    Phaser.GameObjects.Components.Alpha,\n    | 'alpha'\n    | 'alphaBottomLeft'\n    | 'alphaBottomRight'\n    | 'alphaTopLeft'\n    | 'alphaTopRight'\n  >\n>\n\nexport type Point = {\n  x: number\n  y: number\n}\n\nexport type BlendModeProps = Partial<\n  Pick<Phaser.GameObjects.Components.BlendMode, 'blendMode'>\n>\n\nexport type ComputedSizeProps = Partial<\n  Pick<\n    Phaser.GameObjects.Components.ComputedSize,\n    'displayHeight' | 'displayWidth' | 'height' | 'width'\n  >\n>\n\nexport type CropProps = Partial<\n  Pick<Phaser.GameObjects.Components.Crop, 'frame' | 'isCropped' | 'texture'>\n>\n\nexport type DepthProps = Partial<\n  Pick<Phaser.GameObjects.Components.Depth, 'depth'>\n>\n\nexport type FlipProps = Partial<\n  Pick<Phaser.GameObjects.Components.Flip, 'flipX' | 'flipY'>\n>\n\nexport type MaskProps = Partial<\n  Pick<Phaser.GameObjects.Components.Mask, 'mask'>\n>\n\nexport type OriginProps = Partial<\n  Pick<\n    Phaser.GameObjects.Components.Origin,\n    'originX' | 'originY' | 'displayOriginX' | 'displayOriginY'\n  >\n>\n\nexport type PipelineProps = Partial<\n  Pick<Phaser.GameObjects.Components.Pipeline, 'defaultPipeline' | 'pipeline'>\n>\n\nexport type ScrollFactorProps = Partial<\n  Pick<\n    Phaser.GameObjects.Components.ScrollFactor,\n    'scrollFactorX' | 'scrollFactorY'\n  >\n>\n\nexport type TextureCropProps = Partial<\n  Pick<Phaser.GameObjects.Components.TextureCrop, 'texture' | 'frame'>\n>\nexport type TintProps = Partial<\n  Pick<\n    Phaser.GameObjects.Components.Tint,\n    | 'isTinted'\n    | 'tint'\n    | 'tintBottomLeft'\n    | 'tintBottomRight'\n    | 'tintFill'\n    | 'tintTopLeft'\n    | 'tintTopRight'\n  >\n>\n\nexport type TransformProps = Partial<\n  Pick<\n    Phaser.GameObjects.Components.Transform,\n    'angle' | 'rotation' | 'x' | 'y' | 'z' | 'w'\n  > & {\n    scale?: number | (Point & { point?: Point })\n    allowRotation?: boolean\n  }\n>\n\nexport type VisibleProps = Partial<\n  Pick<Phaser.GameObjects.Components.Visible, 'visible'>\n>\n\nexport interface AnimationProps {\n  playingAnimation?: string\n  accumulator?: number\n  delay?: number\n  duration?: number\n  forward?: boolean\n  frameRate?: number\n  isPlaying?: boolean\n  msPerFrame?: number\n  skipMissedFrames?: boolean\n  repeat?: number\n  repeatDelay?: number\n  timeScale?: number\n  yoyo?: boolean\n}\n\n// Arcade Physics\nexport interface AccelerationProps {\n  accelerationX?: number\n  accelerationY?: number\n  acceleration?: number | Point\n}\n\nexport interface AngularProps {\n  angularAcceleration?: number\n  angularDrag?: number\n  angularVelocity?: number\n}\n\nexport interface BounceProps {\n  bounceX?: number\n  bounceY?: number\n  bounce?: number | Point\n  collideWorldBounds?: boolean\n  onWorldBounds?: boolean\n}\n\nexport interface DebugProps {\n  debugBodyColor?: number\n  debugShowBody?: boolean\n  debugShowVelocity?: boolean\n}\n\nexport interface DragProps {\n  damping?: number\n  dragX?: number\n  dragY?: number\n  drag?: number | Point\n  allowDrag?: boolean\n}\n\nexport interface EnableProps {\n  disableBody?: boolean\n\n  /**\n   * If disableBody is true, this will also hide the body\n   */\n  hideBody?: boolean\n}\n\nexport interface FrictionProps {\n  frictionX?: number\n  frictionY?: number\n  friction?: number | Point\n}\n\nexport interface GravityProps {\n  allowGravity?: boolean\n  gravityX?: number\n  gravityY?: number\n  gravity?: number | Point\n}\n\nexport interface ImmovableProps {\n  immovable?: boolean\n}\n\nexport interface MassProps {\n  mass?: number\n}\n\nexport interface SizeProps {\n  circle?: {\n    radius: number\n    offsetX?: number\n    offsetY?: number\n  }\n  offset?: {\n    x?: number\n    y?: number\n  }\n  size?: {\n    width: number\n    height: number\n    center?: number\n  }\n}\n\nexport interface VelocityProps {\n  velocity?: number | Point\n  velocityX?: number\n  velocityY?: number\n  maxVelocity?: number | Point\n}\n\nconst GameObject: CreatePhaserComponentConfig<\n  Phaser.GameObjects.GameObject,\n  GameObjectProps<Phaser.GameObjects.GameObject> & { scene: Phaser.Scene }\n> = {\n  create: ({ instance, scene, physics, physicsType }) => {\n    // @ts-ignore - we need to set the scene key so hostconfig knows which scene to add this instance to\n    instance.__reactPhaser = {\n      sceneKey: scene.scene.key,\n    }\n\n    // if this is a physics object we need to add the body before applyProps\n    if (physics === 'arcade' && scene) {\n      scene.physics.world.enable(\n        instance,\n        physicsType === 'static'\n          ? Phaser.Physics.Arcade.STATIC_BODY\n          : Phaser.Physics.Arcade.DYNAMIC_BODY\n      )\n    }\n    return instance\n  },\n  applyProps: (instance, oldProps, newProps) => {\n    applyProps(instance, oldProps, newProps)\n  },\n}\n\nexport default GameObject\n","import * as Phaser from 'phaser'\nimport { applyProps as defaultApplyProps } from './applyProps'\nimport GameObject from './elements/GameObject'\n\nexport interface CreatePhaserComponentConfig<\n  T extends Phaser.GameObjects.GameObject,\n  P\n> {\n  create: (props: P, game: Phaser.Game) => T\n  applyProps?: (instance: T, oldProps: P, newProps: P) => any\n}\n\nexport const TYPES: Record<string, string> = {\n  GameObject: 'GameObject',\n}\n\nexport const ELEMENTS: Record<string, CreatePhaserComponentConfig<any, any>> = {\n  GameObject,\n}\n\n/**\n * Create an element based on tag type\n * Similar to react-dom's `React.createElement()`\n *\n * @param {string} type Element type\n * @param {Object} props Component props\n * @param {Object} root Root instance\n */\nexport function createElement(\n  type: keyof typeof TYPES,\n  props: any = {},\n  root: Phaser.Game\n) {\n  const { create, applyProps = defaultApplyProps } = ELEMENTS[type]\n\n  const instance = create(props, root)\n\n  instance.applyProps = applyProps.bind(instance)\n  applyProps(instance, {}, props)\n\n  return instance\n}\n","import React, {\n  useMemo,\n  useContext,\n  useLayoutEffect,\n  useImperativeHandle,\n} from 'react'\nimport { useScene } from '../hooks/useScene'\n\nconst GroupContext = React.createContext<Phaser.GameObjects.Group>(null)\n\nexport interface GroupProps {\n  active?: boolean\n  defaultFrame?: number\n  defaultKey?: string\n  isParent?: boolean\n  name?: string\n  children?: React.ReactNode\n}\n\nfunction Group(\n  { children, ...props }: GroupProps,\n  ref: React.Ref<Phaser.GameObjects.Group>\n) {\n  const scene = useScene()\n\n  const group = useMemo(() => scene.add.group([]), [])\n\n  useLayoutEffect(() => {\n    return () => {\n      group.destroy()\n    }\n  }, [])\n\n  useImperativeHandle(ref, () => group)\n\n  useLayoutEffect(() => {\n    group.active = props.active\n    group.defaultFrame = props.defaultFrame\n    group.defaultKey = props.defaultKey\n    group.isParent = props.isParent\n    group.name = props.name\n  }, [props])\n\n  return <GroupContext.Provider value={group}>{children}</GroupContext.Provider>\n}\n\nexport default React.forwardRef(Group)\n\nexport function useGroup<T extends Phaser.GameObjects.Group>() {\n  return useContext(GroupContext) as T\n}\n","import { TYPES } from '../reconciler/element'\nimport { GameObjectProps } from '../reconciler/elements/GameObject'\nimport React, { useLayoutEffect } from 'react'\nimport { useGroup } from './Group'\nimport { useScene } from '../hooks/useScene'\n\nconst GameObjectElement = (TYPES.GameObject as unknown) as React.FC<\n  GameObjectProps<Phaser.GameObjects.GameObject> & { scene: Phaser.Scene }\n>\n\nexport * from '../reconciler/elements/GameObject'\n\nexport const GameObjectContext = React.createContext<\n  Phaser.GameObjects.GameObject\n>(null)\n\nexport default function GameObject<T extends Phaser.GameObjects.GameObject>(\n  props: GameObjectProps<T>\n) {\n  const scene = useScene()\n  const group = useGroup()\n\n  useLayoutEffect(() => {\n    if (group) {\n      group.add(props.instance)\n\n      return () => {\n        group.remove(props.instance)\n      }\n    }\n  }, [group])\n\n  return (\n    <GameObjectContext.Provider value={props.instance}>\n      <GameObjectElement scene={scene} {...props} />\n      {props.children}\n    </GameObjectContext.Provider>\n  )\n}\n","import { useContext } from 'react'\nimport { GameObjectContext } from '../components/GameObject'\n\nexport function useGameObject<T extends Phaser.GameObjects.GameObject>() {\n  return useContext(GameObjectContext) as T\n}\n","import { useArcadeCollider, useGameObject, ColliderObjectType } from '../hooks'\n\nexport interface ArcadeColliderProps<With extends ColliderObjectType> {\n  with: With\n  overlapOnly?: boolean\n  onCollide?: (self: any, other: With extends string ? any : With) => any\n  onProcess?: (self: any, other: With extends string ? any : With) => any\n}\n\n/**\n * Creates a collider between the parent GameObject component and the \"with\" prop. The\n * \"with\" prop can either be a GameObject, a ref to a GameObject, or a string matching\n * the name of a GameObject (in Phaser).\n *\n * ```\n *  <ArcadeImage {...props}>\n *    <ArcadeCollider with=\"coin\">\n *  </ArcadeImage>\n * ```\n *\n * You can also use it with a custom GameObject component\n *\n * ```\n *  <GameObject instance={instance}>\n *    <ArcadeCollider with=\"coin\">\n *  </GameObject>\n * ```\n *\n */\nexport default function ArcadeCollider<With extends ColliderObjectType = any>(\n  props: ArcadeColliderProps<With>\n): JSX.Element {\n  const { onCollide, onProcess, overlapOnly } = props\n\n  const gameObject = useGameObject()\n\n  if (!gameObject) {\n    throw Error('ArcadeCollider must be used within a GameObject component')\n  }\n\n  useArcadeCollider(gameObject, props.with, {\n    overlapOnly,\n    onCollide,\n    onProcess,\n  })\n\n  return null\n}\n","import * as Phaser from 'phaser'\nimport GameObject, {\n  AlphaProps,\n  BlendModeProps,\n  ComputedSizeProps,\n  DepthProps,\n  FlipProps,\n  OriginProps,\n  PipelineProps,\n  ScrollFactorProps,\n  TransformProps,\n  VisibleProps,\n  MaskProps,\n  TintProps,\n  GameObjectProps,\n  AccelerationProps,\n  AngularProps,\n  BounceProps,\n  DebugProps,\n  EnableProps,\n  DragProps,\n  FrictionProps,\n  GravityProps,\n  ImmovableProps,\n  MassProps,\n  SizeProps,\n  VelocityProps,\n} from './GameObject'\nimport { useScene } from '../hooks/useScene'\nimport React, { useImperativeHandle, useMemo } from 'react'\n\nexport interface ArcadeImageProps\n  extends Omit<\n      GameObjectProps<Phaser.Physics.Arcade.Image>,\n      'ref' | 'instance' | 'physics'\n    >,\n    AlphaProps,\n    BlendModeProps,\n    ComputedSizeProps,\n    DepthProps,\n    FlipProps,\n    MaskProps,\n    OriginProps,\n    PipelineProps,\n    ScrollFactorProps,\n    TintProps,\n    TransformProps,\n    VisibleProps,\n    AccelerationProps,\n    AngularProps,\n    BounceProps,\n    DebugProps,\n    EnableProps,\n    DragProps,\n    FrictionProps,\n    GravityProps,\n    ImmovableProps,\n    MassProps,\n    SizeProps,\n    VelocityProps {\n  instance?: Phaser.Physics.Arcade.Image\n  texture?: string\n  frame?: string | number\n}\n\nfunction ArcadeImage(\n  props: ArcadeImageProps,\n  ref: React.Ref<Phaser.Physics.Arcade.Image>\n) {\n  const scene = useScene()\n  const instance = useMemo(\n    () =>\n      props.instance ||\n      new Phaser.Physics.Arcade.Image(\n        scene,\n        props.x,\n        props.y,\n        props.texture,\n        props.frame\n      ),\n    []\n  )\n\n  useImperativeHandle(ref, () => instance)\n\n  return <GameObject instance={instance} physics=\"arcade\" {...props} />\n}\n\nexport default React.forwardRef(ArcadeImage)\n","import * as Phaser from 'phaser'\nimport GameObject, {\n  AlphaProps,\n  BlendModeProps,\n  ComputedSizeProps,\n  DepthProps,\n  FlipProps,\n  OriginProps,\n  PipelineProps,\n  ScrollFactorProps,\n  TransformProps,\n  VisibleProps,\n  MaskProps,\n  TintProps,\n  GameObjectProps,\n} from './GameObject'\nimport { useScene } from '../hooks/useScene'\nimport React, { useImperativeHandle, useMemo, useLayoutEffect } from 'react'\nimport { AnimationProps } from '../reconciler/elements/GameObject'\n\nexport interface SpriteProps\n  extends Omit<GameObjectProps<Phaser.GameObjects.Sprite>, 'instance' | 'ref'>,\n    AlphaProps,\n    AnimationProps,\n    BlendModeProps,\n    ComputedSizeProps,\n    DepthProps,\n    FlipProps,\n    MaskProps,\n    OriginProps,\n    PipelineProps,\n    ScrollFactorProps,\n    TintProps,\n    TransformProps,\n    VisibleProps {\n  instance?: Phaser.GameObjects.Sprite\n  animations?: Phaser.Types.Animations.Animation[]\n  animation?: string\n  texture?: string\n  x?: number\n  y?: number\n  frame?: number\n}\n\nfunction Sprite(\n  { animations, animation, ...props }: SpriteProps,\n  ref: React.Ref<Phaser.GameObjects.Sprite>\n) {\n  const scene = useScene()\n  const instance = useMemo(\n    () =>\n      props.instance ||\n      new Phaser.GameObjects.Sprite(\n        scene,\n        props.x,\n        props.y,\n        props.texture,\n        props.frame\n      ),\n    []\n  )\n\n  useImperativeHandle(ref, () => instance)\n\n  useLayoutEffect(() => {\n    if (animations) {\n      animations.forEach(animation => {\n        scene.anims.create(animation)\n      })\n    }\n\n    return () => {\n      if (animations) {\n        animations.forEach(animation => {\n          scene.anims.remove(animation.key)\n        })\n      }\n    }\n  }, [animations])\n\n  useLayoutEffect(() => {\n    if (animation) {\n      instance.play(animation, true)\n    }\n  }, [animation])\n\n  return <GameObject instance={instance} {...props} />\n}\n\nexport default React.forwardRef(Sprite)\n","import * as Phaser from 'phaser'\nimport React, { useImperativeHandle, useLayoutEffect, useMemo } from 'react'\nimport { useScene } from '../hooks/useScene'\nimport GameObject, {\n  AccelerationProps,\n  AlphaProps,\n  AngularProps,\n  AnimationProps,\n  BlendModeProps,\n  BounceProps,\n  ComputedSizeProps,\n  DebugProps,\n  DepthProps,\n  DragProps,\n  EnableProps,\n  FlipProps,\n  FrictionProps,\n  GameObjectProps,\n  GravityProps,\n  ImmovableProps,\n  MaskProps,\n  MassProps,\n  OriginProps,\n  PipelineProps,\n  ScrollFactorProps,\n  SizeProps,\n  TintProps,\n  TransformProps,\n  VelocityProps,\n  VisibleProps,\n} from './GameObject'\nimport Sprite, { SpriteProps } from './Sprite'\n\nexport interface ArcadeSpriteProps\n  extends Omit<SpriteProps, 'ref' | 'instance' | 'physics'>,\n    AlphaProps,\n    AnimationProps,\n    BlendModeProps,\n    ComputedSizeProps,\n    DepthProps,\n    FlipProps,\n    MaskProps,\n    OriginProps,\n    PipelineProps,\n    ScrollFactorProps,\n    TintProps,\n    TransformProps,\n    VisibleProps,\n    AccelerationProps,\n    AngularProps,\n    BounceProps,\n    DebugProps,\n    EnableProps,\n    DragProps,\n    FrictionProps,\n    GravityProps,\n    ImmovableProps,\n    MassProps,\n    SizeProps,\n    VelocityProps {\n  instance?: Phaser.Physics.Arcade.Sprite\n}\n\nfunction ArcadeSprite(\n  props: ArcadeSpriteProps,\n  ref: React.Ref<Phaser.Physics.Arcade.Sprite>\n) {\n  const scene = useScene()\n  const instance = useMemo(\n    () =>\n      props.instance ||\n      new Phaser.Physics.Arcade.Sprite(\n        scene,\n        props.x,\n        props.y,\n        props.texture,\n        props.frame\n      ),\n    []\n  )\n\n  useImperativeHandle(ref, () => instance)\n\n  // reuse the Sprite component because it does some Sprite prop things\n  // but we'll need to disguise the props as any. This is smelly, but does\n  // share the common Sprite logic\n  return <Sprite instance={instance} physics=\"arcade\" {...(props as any)} />\n}\n\nexport default React.forwardRef(ArcadeSprite)\n","/**\n * -------------------------------------------\n * Host Config file.\n *\n * See:\n *   https://github.com/facebook/react/tree/master/packages/react-reconciler\n *   https://github.com/facebook/react/blob/master/packages/react-reconciler/src/forks/ReactFiberHostConfig.custom.js\n * -------------------------------------------\n */\n\nimport invariant from 'fbjs/lib/invariant'\nimport performanceNow from 'performance-now'\n\nimport { createElement } from './element'\nimport { applyProps as defaultApplyProps } from './applyProps'\n\ninterface InternalGameObjectProperties {\n  __reactPhaser: { sceneKey: string }\n}\n\nfunction appendChild(\n  parent: Phaser.Game | Phaser.GameObjects.GameObject,\n  child: Phaser.GameObjects.GameObject & InternalGameObjectProperties\n) {\n  // __reactPhaser.sceneKey comes from GameObject's element creator\n  if (parent instanceof Phaser.Game && child.__reactPhaser.sceneKey) {\n    const scene = parent.scene.getScene(child.__reactPhaser.sceneKey)\n    if (!scene.children.exists(child)) {\n      scene.add.existing(child)\n    }\n  }\n\n  if (parent instanceof Phaser.GameObjects.GameObject) {\n    // todo\n  }\n}\n\nfunction removeChild(parent: Phaser.Game, child: any) {\n  if (child.destroy) {\n    child.destroy()\n  }\n}\n\nfunction insertBefore(\n  parent: Phaser.Game,\n  child: Phaser.GameObjects.GameObject & InternalGameObjectProperties,\n  beforeChild: Phaser.GameObjects.GameObject & InternalGameObjectProperties\n) {\n  invariant(\n    child !== beforeChild,\n    'PhaserFiber cannot insert node before itself'\n  )\n\n  if (parent instanceof Phaser.Game) {\n    const scene = parent.scene.getScene(child.__reactPhaser.sceneKey)\n    const childExists = scene.children.exists(child)\n    const index = scene.children.getIndex(beforeChild)\n\n    childExists\n      ? scene.children.moveTo(child, index)\n      : scene.children.addAt(child, index)\n  }\n}\n\n// get diff between 2 objects\n// https://github.com/facebook/react/blob/97e2911/packages/react-dom/src/client/ReactDOMFiberComponent.js#L546\nfunction diffProperties(\n  phaserElement: any,\n  type: any,\n  lastProps: any,\n  nextProps: any,\n  rootContainerElement: any\n) {\n  let updatePayload: any = null\n\n  for (const propKey in lastProps) {\n    if (\n      nextProps.hasOwnProperty(propKey) ||\n      !lastProps.hasOwnProperty(propKey) ||\n      lastProps[propKey] == null\n    ) {\n      continue\n    }\n    if (propKey === 'children') {\n      // Noop. Text children not supported\n    } else {\n      // For all other deleted properties we add it to the queue. We use\n      // the whitelist in the commit phase instead.\n      if (!updatePayload) {\n        updatePayload = []\n      }\n      updatePayload.push(propKey, null)\n    }\n  }\n\n  for (const propKey in nextProps) {\n    const nextProp = nextProps[propKey]\n    const lastProp = lastProps != null ? lastProps[propKey] : undefined\n\n    if (\n      !nextProps.hasOwnProperty(propKey) ||\n      nextProp === lastProp ||\n      (nextProp == null && lastProp == null)\n    ) {\n      continue\n    }\n\n    if (propKey === 'children') {\n      // Noop. Text children not supported\n    } else {\n      // For any other property we always add it to the queue and then we\n      // filter it out using the whitelist during the commit.\n      if (!updatePayload) {\n        updatePayload = []\n      }\n      updatePayload.push(propKey, nextProp)\n    }\n  }\n\n  return updatePayload\n}\n\nexport default {\n  getRootHostContext(rootContainerInstance: any) {\n    return rootContainerInstance\n  },\n\n  getChildHostContext() {\n    return {}\n  },\n\n  getChildHostContextForEventComponent(parentHostContext: any) {\n    return parentHostContext\n  },\n\n  getPublicInstance(instance: any) {\n    return instance\n  },\n\n  prepareForCommit() {\n    // noop\n  },\n\n  resetAfterCommit() {\n    // noop\n  },\n\n  createInstance: createElement,\n\n  hideInstance(instance: Phaser.GameObjects.GameObject) {\n    if (instance.setActive) {\n      instance.setActive(false)\n    }\n  },\n\n  unhideInstance(instance: Phaser.GameObjects.GameObject, props: any) {\n    const active =\n      props !== undefined && props !== null && props.hasOwnProperty('active')\n        ? props.active\n        : true\n\n    instance.setActive(active)\n  },\n\n  appendInitialChild: appendChild,\n\n  finalizeInitialChildren(phaserElement: any, type: any, props: any) {\n    return false\n  },\n\n  prepareUpdate(\n    phaserElement: any,\n    type: any,\n    oldProps: any,\n    newProps: any,\n    rootContainerInstance: any,\n    hostContext: any\n  ) {\n    return diffProperties(\n      phaserElement,\n      type,\n      oldProps,\n      newProps,\n      rootContainerInstance\n    )\n  },\n\n  shouldSetTextContent(type: any, props: any) {\n    return false\n  },\n\n  shouldDeprioritizeSubtree(\n    type: string,\n    props: Phaser.GameObjects.GameObject\n  ) {\n    const isActive =\n      typeof props.active === 'undefined' || props.active === true\n\n    return !isActive\n  },\n\n  createTextInstance(\n    text: any,\n    rootContainerInstance: any,\n    internalInstanceHandler: any\n  ) {\n    invariant(\n      false,\n      'react-phaser does not support text instances. Use `<Text /> component` instead.'\n    )\n  },\n\n  mountEventComponent() {\n    // noop\n  },\n\n  updateEventComponent() {\n    // noop\n  },\n\n  handleEventTarget() {\n    // noop\n  },\n\n  scheduleTimeout: setTimeout,\n\n  cancelTimeout: clearTimeout,\n\n  noTimeout: -1,\n\n  warnsIfNotActing: false,\n\n  now: performanceNow,\n\n  isPrimaryRenderer: false,\n\n  supportsMutation: true,\n\n  supportsPersistence: false,\n\n  supportsHydration: false,\n\n  /**\n   * -------------------------------------------\n   * Mutation\n   * -------------------------------------------\n   */\n\n  appendChild,\n\n  appendChildToContainer: appendChild,\n\n  removeChild,\n\n  removeChildFromContainer: removeChild,\n\n  insertBefore,\n\n  insertInContainerBefore: insertBefore,\n\n  commitUpdate(\n    instance: any,\n    updatePayload: any,\n    type: any,\n    oldProps: any,\n    newProps: any\n  ) {\n    let applyProps = instance && instance.applyProps\n\n    if (typeof applyProps !== 'function') {\n      applyProps = defaultApplyProps\n    }\n    applyProps(instance, oldProps, newProps)\n  },\n\n  commitMount(\n    instance: any,\n    updatePayload: any,\n    type: any,\n    oldProps: any,\n    newProps: any\n  ) {\n    // noop\n  },\n\n  commitTextUpdate(textInstance: any, oldText: any, newText: any) {\n    // noop\n  },\n\n  resetTextContent(phaserElement: any) {\n    // noop\n  },\n}\n","import Reconciler from 'react-reconciler'\nimport pkg from '../../package.json'\nimport hostconfig from './hostconfig'\n\nexport const PhaserFiber = Reconciler(hostconfig as any)\nexport const VERSION = pkg.version\nexport const PACKAGE_NAME = pkg.name\n","import * as Phaser from 'phaser'\nimport React from 'react'\nimport { FiberRoot } from 'react-reconciler'\nimport { PACKAGE_NAME, PhaserFiber, VERSION } from '../../reconciler'\nimport GameContext from './GameContext'\n\nexport interface GameProps extends Phaser.Types.Core.GameConfig {\n  children?: JSX.Element | JSX.Element[] | React.ReactNode\n}\n\nclass Game extends React.Component<GameProps, { booting: boolean }> {\n  static displayName = 'Game'\n  mountNode: FiberRoot\n  game: Phaser.Game\n\n  state = {\n    booting: true,\n  }\n\n  componentDidMount() {\n    const { children, canvas, ...config } = this.props\n\n    this.game = new Phaser.Game({ ...config })\n\n    this.game.events.on('ready', () => {\n      this.setState({ booting: false })\n    })\n\n    this.mountNode = PhaserFiber.createContainer(this.game, false, false)\n\n    injectDevtools()\n\n    if (process.env.NODE_ENV === 'development') {\n      // @ts-ignore\n      window.game = this.game\n    }\n\n    PhaserFiber.updateContainer(\n      this.getChildren(),\n      this.mountNode,\n      this,\n      null as any\n    )\n  }\n\n  componentDidUpdate() {\n    // flush fiber\n    PhaserFiber.updateContainer(\n      this.getChildren(),\n      this.mountNode,\n      this,\n      null as any\n    )\n  }\n\n  getChildren() {\n    const children = this.state.booting ? null : this.props.children\n\n    return (\n      <GameContext.Provider value={this.game}>{children}</GameContext.Provider>\n    )\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(`Error occurred in \\`Game\\`.`)\n    console.error(error)\n    console.error(errorInfo)\n  }\n\n  componentWillUnmount() {\n    PhaserFiber.updateContainer(null, this.mountNode, this, null as any)\n    this.game.destroy(true)\n  }\n\n  render() {\n    return null as JSX.Element\n  }\n}\n\nexport default Game\n\n/**\n * Inject into React Devtools\n */\nfunction injectDevtools() {\n  PhaserFiber.injectIntoDevTools({\n    bundleType: process.env.NODE_ENV !== 'production' ? 1 : 0,\n    version: VERSION,\n    rendererPackageName: PACKAGE_NAME,\n    findFiberByHostInstance: PhaserFiber.findHostInstance as any,\n  })\n}\n","import * as Phaser from 'phaser'\nimport GameObject, {\n  AlphaProps,\n  BlendModeProps,\n  ComputedSizeProps,\n  DepthProps,\n  FlipProps,\n  OriginProps,\n  PipelineProps,\n  ScrollFactorProps,\n  TransformProps,\n  VisibleProps,\n  MaskProps,\n  TintProps,\n  GameObjectProps,\n} from './GameObject'\nimport { useScene } from '../hooks/useScene'\nimport React, { useImperativeHandle, useMemo } from 'react'\n\nexport interface ImageProps\n  extends Omit<GameObjectProps<Phaser.GameObjects.Image>, 'instance' | 'ref'>,\n    AlphaProps,\n    BlendModeProps,\n    ComputedSizeProps,\n    DepthProps,\n    FlipProps,\n    MaskProps,\n    OriginProps,\n    PipelineProps,\n    ScrollFactorProps,\n    TintProps,\n    TransformProps,\n    VisibleProps {\n  instance?: Phaser.GameObjects.Image\n  texture?: string\n  frame?: string | number\n}\n\nfunction Image(props: ImageProps, ref: React.Ref<Phaser.GameObjects.Image>) {\n  const scene = useScene()\n  const instance = useMemo(\n    () =>\n      props.instance ||\n      new Phaser.GameObjects.Image(\n        scene,\n        props.x,\n        props.y,\n        props.texture,\n        props.frame\n      ),\n    []\n  )\n  useImperativeHandle(ref, () => instance)\n\n  return <GameObject instance={instance} {...props} />\n}\n\nexport default React.forwardRef(Image)\n","import * as Phaser from 'phaser'\nimport React, {\n  useLayoutEffect,\n  useMemo,\n  useState,\n  useImperativeHandle,\n} from 'react'\nimport { useGame } from '../../hooks/useGame'\nimport SceneContext from './SceneContext'\n\nexport interface SceneProps extends Phaser.Types.Scenes.SettingsConfig {\n  sceneKey: string\n  children?: JSX.Element | JSX.Element[] | React.ReactNode\n  onPreload?: (scene: Phaser.Scene) => any\n  onCreate?: (scene: Phaser.Scene) => any\n  onInit?: (scene: Phaser.Scene) => any\n  renderLoading?: (progress: number) => React.ReactNode\n}\n\nfunction Scene(\n  {\n    sceneKey,\n    children,\n    renderLoading,\n    onPreload,\n    onCreate,\n    onInit,\n    ...options\n  }: SceneProps,\n  ref: React.Ref<Phaser.Scene>\n) {\n  const game = useGame()\n  const [loading, setLoading] = useState(!!onPreload)\n  const [loadProgress, setLoadProgress] = useState(0)\n\n  const scene = useMemo(() => {\n    const instance = new Phaser.Scene({\n      ...options,\n      key: sceneKey,\n    })\n\n    // @ts-ignore\n    instance.preload = onPreload\n      ? () => {\n          onPreload(instance)\n          instance.load.once('complete', () => {\n            setLoading(false)\n            setLoadProgress(0)\n          })\n          instance.load.start()\n        }\n      : null\n\n    // @ts-ignore\n    instance.create = onCreate ? () => onCreate(instance) : null\n    // @ts-ignore\n    instance.init = onInit ? () => onInit(instance) : null\n\n    game.scene.add(sceneKey, instance, true)\n\n    return instance\n  }, [])\n\n  useImperativeHandle(ref, () => scene)\n\n  useLayoutEffect(() => {\n    const listeners: Phaser.Events.EventEmitter[] = []\n\n    // can we use suspense instead somehow?\n    listeners.push(\n      scene.load.once('start', () => {\n        setLoading(!!onPreload)\n      }),\n\n      scene.load.on('progress', (progress: number) => {\n        setLoadProgress(progress)\n      })\n    )\n\n    return () => {\n      game.scene.remove(sceneKey)\n\n      listeners.forEach(listener => {\n        listener.eventNames().forEach(event => listener.off(event))\n      })\n    }\n  }, [])\n\n  return (\n    <SceneContext.Provider value={scene}>\n      {loading && renderLoading ? renderLoading(loadProgress) : children}\n    </SceneContext.Provider>\n  )\n}\n\nexport default React.forwardRef(Scene)\n","import React, { useMemo, useReducer } from 'react'\nimport SpawnerContext, { SpawnerContextValue } from './SpawnerContext'\nimport uuid from 'uuid/v4'\n\nexport interface SpawnerProps {\n  children?: JSX.Element | JSX.Element[] | React.ReactNode\n}\n\nexport interface SpawnedChild<P = any> {\n  component: React.ComponentType<P>\n  props: P\n  key: string\n}\n\nexport default function Spawner({ children }: SpawnerProps) {\n  const [state, dispatch] = useReducer(reducer, { children: [] })\n\n  const handleDestroy = (key: string) => {\n    dispatch({ type: 'DESTROY_CHILD', payload: key })\n  }\n\n  const value = useMemo<SpawnerContextValue>(\n    () => ({\n      spawn: (component, props) => {\n        const key = uuid()\n        dispatch({ type: 'SPAWN', payload: { component, props, key } })\n        return key\n      },\n    }),\n    [state]\n  )\n\n  return (\n    <SpawnerContext.Provider value={value}>\n      {state.children.map(child => {\n        return (\n          <child.component\n            key={child.key}\n            {...child.props}\n            onDestroy={() => {\n              if (child.props.onDestroy) {\n                child.props.onDestroy()\n              }\n              handleDestroy(child.key)\n            }}\n          />\n        )\n      })}\n      {children}\n    </SpawnerContext.Provider>\n  )\n}\n\ninterface SpawnerState {\n  children: SpawnedChild[]\n}\n\nfunction reducer(state: SpawnerState, action: { type: string; payload: any }) {\n  switch (action.type) {\n    case 'SPAWN':\n      return {\n        ...state,\n        children: [...state.children, action.payload],\n      }\n    case 'DESTROY_CHILD':\n      return {\n        ...state,\n        children: state.children.filter(child => child.key !== action.payload),\n      }\n  }\n\n  return state\n}\n","import * as React from 'react'\nimport SpawnerContext, { SpawnerContextValue } from './SpawnerContext'\n\nexport interface WithSpawnerProps {\n  spawner: SpawnerContextValue\n}\n\nconst withSpawner = <T extends WithSpawnerProps>(\n  Component: React.ComponentType<T>\n) => {\n  function WithSpawner(props: Omit<T, keyof WithSpawnerProps>) {\n    return (\n      <SpawnerContext.Consumer>\n        {spawner => <Component {...(props as T)} spawner={spawner} />}\n      </SpawnerContext.Consumer>\n    )\n  }\n\n  WithSpawner.displayName = `WithSpawner(${Component.displayName})`\n\n  return WithSpawner\n}\n\nexport default withSpawner\n","import * as Phaser from 'phaser'\nimport React, { useImperativeHandle, useMemo } from 'react'\nimport GameObject, {\n  AlphaProps,\n  BlendModeProps,\n  ComputedSizeProps,\n  CropProps,\n  DepthProps,\n  FlipProps,\n  GameObjectProps,\n  MaskProps,\n  OriginProps,\n  PipelineProps,\n  ScrollFactorProps,\n  TintProps,\n  TransformProps,\n  VisibleProps,\n} from './GameObject'\nimport { useScene } from '../hooks/useScene'\n\nexport interface TextProps\n  extends Omit<GameObjectProps<Phaser.GameObjects.Text>, 'instance' | 'ref'>,\n    AlphaProps,\n    BlendModeProps,\n    ComputedSizeProps,\n    CropProps,\n    DepthProps,\n    FlipProps,\n    MaskProps,\n    OriginProps,\n    PipelineProps,\n    ScrollFactorProps,\n    TintProps,\n    TransformProps,\n    VisibleProps {\n  instance?: Phaser.GameObjects.Text\n  text?: string | string[]\n  style: Phaser.Types.GameObjects.Text.TextStyle\n}\n\nfunction Text(props: TextProps, ref: React.Ref<Phaser.GameObjects.Text>) {\n  const scene = useScene()\n  const instance = useMemo(\n    () =>\n      props.instance ||\n      new Phaser.GameObjects.Text(\n        scene,\n        props.x,\n        props.y,\n        props.text,\n        props.style\n      ),\n    []\n  )\n\n  useImperativeHandle(ref, () => instance)\n\n  return <GameObject instance={instance} {...props} />\n}\n\nexport default React.forwardRef(Text)\n"],"names":["SceneContext","React","useScene","useContext","GameContext","useGame","useGameEvent","event","onEvent","game","useEffect","events","on","off","useGameLoop","onLoop","callback","time","delta","useInputEvent","scene","invariant","input","useKeyboardEvent","keyboard","useGamepadEvent","gamepad","findGameObjectsByName","name","children","list","filter","child","useArcadeCollider","obj1","obj2","args","onCollide","onProcess","overlapOnly","collider","useRef","useLayoutEffect","current","physics","add","createObjectsArray","destroy","object1","object2","collideCallback","processCallback","objects","toArray","reduce","total","object","obj","Array","isArray","SpawnerContext","useSpawner","PROPS_RESERVED","parent","physicsType","instance","sanitizeProps","props","Object","keys","filteredProps","key","indexOf","applyProps","oldProps","newProps","forEach","newValue","data","dataKey","setData","oldPoint","convertToPoint","newPoint","pointsAreEqual","setProp","x","y","anims","debugShowBody","debugShowVelocity","debugBodyColor","setDebug","disableBody","hideBody","circle","radius","offsetX","offsetY","setCircle","offset","setOffset","body","size","width","height","center","setSize","setScale","point","undefined","updateFromGameObject","methodName","slice","toUpperCase","value","num","p1","p2","GameObject","create","__reactPhaser","sceneKey","world","enable","Phaser","Physics","Arcade","STATIC_BODY","DYNAMIC_BODY","TYPES","ELEMENTS","createElement","type","root","defaultApplyProps","bind","GroupContext","createContext","Group","ref","group","useMemo","useImperativeHandle","active","defaultFrame","defaultKey","isParent","Provider","forwardRef","useGroup","GameObjectElement","GameObjectContext","remove","useGameObject","ArcadeCollider","gameObject","Error","ArcadeImage","Image","texture","frame","Sprite","animations","animation","play","ArcadeSprite","appendChild","Game","getScene","exists","existing","GameObjects","removeChild","insertBefore","beforeChild","childExists","index","getIndex","moveTo","addAt","diffProperties","phaserElement","lastProps","nextProps","rootContainerElement","updatePayload","propKey","hasOwnProperty","push","nextProp","lastProp","getRootHostContext","rootContainerInstance","getChildHostContext","getChildHostContextForEventComponent","parentHostContext","getPublicInstance","prepareForCommit","resetAfterCommit","createInstance","hideInstance","setActive","unhideInstance","appendInitialChild","finalizeInitialChildren","prepareUpdate","hostContext","shouldSetTextContent","shouldDeprioritizeSubtree","isActive","createTextInstance","text","internalInstanceHandler","mountEventComponent","updateEventComponent","handleEventTarget","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","warnsIfNotActing","now","performanceNow","isPrimaryRenderer","supportsMutation","supportsPersistence","supportsHydration","appendChildToContainer","removeChildFromContainer","insertInContainerBefore","commitUpdate","commitMount","commitTextUpdate","textInstance","oldText","newText","resetTextContent","PhaserFiber","Reconciler","hostconfig","VERSION","pkg","version","PACKAGE_NAME","booting","componentDidMount","config","setState","mountNode","createContainer","injectDevtools","process","env","NODE_ENV","window","updateContainer","getChildren","componentDidUpdate","state","componentDidCatch","error","errorInfo","console","componentWillUnmount","render","Component","injectIntoDevTools","bundleType","rendererPackageName","findFiberByHostInstance","findHostInstance","Scene","renderLoading","onPreload","onCreate","onInit","options","useState","loading","setLoading","loadProgress","setLoadProgress","preload","load","once","start","init","listeners","progress","listener","eventNames","Spawner","useReducer","reducer","dispatch","handleDestroy","payload","spawn","component","uuid","map","onDestroy","action","withSpawner","WithSpawner","Consumer","spawner","displayName","Text","style"],"mappings":"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"}