/**
 * -------------------------------------------
 * Host Config file.
 *
 * See:
 *   https://github.com/facebook/react/tree/master/packages/react-reconciler
 *   https://github.com/facebook/react/blob/master/packages/react-reconciler/src/forks/ReactFiberHostConfig.custom.js
 * -------------------------------------------
 */
import performanceNow from 'performance-now';
import { createElement } from './element';
interface InternalGameObjectProperties {
    __reactPhaser: {
        sceneKey: string;
    };
}
declare function appendChild(parent: Phaser.Game | Phaser.GameObjects.GameObject, child: Phaser.GameObjects.GameObject & InternalGameObjectProperties): void;
declare function removeChild(parent: Phaser.Game, child: any): void;
declare function insertBefore(parent: Phaser.Game, child: Phaser.GameObjects.GameObject & InternalGameObjectProperties, beforeChild: Phaser.GameObjects.GameObject & InternalGameObjectProperties): void;
declare const _default: {
    getRootHostContext(rootContainerInstance: any): any;
    getChildHostContext(): {};
    getChildHostContextForEventComponent(parentHostContext: any): any;
    getPublicInstance(instance: any): any;
    prepareForCommit(): void;
    resetAfterCommit(): void;
    createInstance: typeof createElement;
    hideInstance(instance: Phaser.GameObjects.GameObject): void;
    unhideInstance(instance: Phaser.GameObjects.GameObject, props: any): void;
    appendInitialChild: typeof appendChild;
    finalizeInitialChildren(phaserElement: any, type: any, props: any): boolean;
    prepareUpdate(phaserElement: any, type: any, oldProps: any, newProps: any, rootContainerInstance: any, hostContext: any): any;
    shouldSetTextContent(type: any, props: any): boolean;
    shouldDeprioritizeSubtree(type: string, props: Phaser.GameObjects.GameObject): boolean;
    createTextInstance(text: any, rootContainerInstance: any, internalInstanceHandler: any): void;
    mountEventComponent(): void;
    updateEventComponent(): void;
    handleEventTarget(): void;
    scheduleTimeout: typeof setTimeout;
    cancelTimeout: typeof clearTimeout;
    noTimeout: number;
    warnsIfNotActing: boolean;
    now: typeof performanceNow;
    isPrimaryRenderer: boolean;
    supportsMutation: boolean;
    supportsPersistence: boolean;
    supportsHydration: boolean;
    /**
     * -------------------------------------------
     * Mutation
     * -------------------------------------------
     */
    appendChild: typeof appendChild;
    appendChildToContainer: typeof appendChild;
    removeChild: typeof removeChild;
    removeChildFromContainer: typeof removeChild;
    insertBefore: typeof insertBefore;
    insertInContainerBefore: typeof insertBefore;
    commitUpdate(instance: any, updatePayload: any, type: any, oldProps: any, newProps: any): void;
    commitMount(instance: any, updatePayload: any, type: any, oldProps: any, newProps: any): void;
    commitTextUpdate(textInstance: any, oldText: any, newText: any): void;
    resetTextContent(phaserElement: any): void;
};
export default _default;
